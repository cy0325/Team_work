package org.nwnu.system.controller;


import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;

import me.chanjar.weixin.mp.bean.WxMpMassNews;
import me.chanjar.weixin.mp.bean.result.WxMpMassSendResult;

import org.apache.xmlbeans.impl.xb.xsdschema.Public;
import org.nwnu.system.entity.WexinContent;


import org.nwnu.system.entity.SysUser;
import org.nwnu.system.entity.WexinContent;
import org.nwnu.system.service.SysUserService;
import org.nwnu.system.service.WexinContentService;
import org.nwnu.system.weixin.WeixinMessage;
import org.nwnu.base.controller.BaseController;//基础包
import org.nwnu.pub.util.Const;
import org.nwnu.pub.util.StringUtil;//自定义字符串处理类，如果没有就取掉
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * <p>
 * 微信推送消息 前端控制器
 * </p>
 *
 * @author Answer
 * @since 2017-08-12
 */
@Controller
@RequestMapping("/WexinContent")
public class WexinContentController extends BaseController {
	@Autowired
	private WexinContentService this_WexinContentService;
	
	@Autowired
	private SysUserService this_SysUserService;
	
	@Autowired
    private HttpServletRequest request;
	
	/***
	 * 每个controller的首页
	 * 	 
	 */
	@RequestMapping(value = "/WexinContentIndex")
	public ModelAndView WexinContentIndex(ModelAndView modelAndView) {
		return modelAndView;
	}

	/***
	 * 列表
	 * 
	 * @param 
	 * @param page
	 *            起始页
	 * @param rows
	 *            页面大小 * @param sort 排序字段 * @param rows 排序顺序
	 * @return
	 */
	@RequestMapping(value = "/List", method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> GetList(
			@RequestParam(required = false, defaultValue = "1") int page,
			@RequestParam(required = false, defaultValue = "10") int pagesizes) {
		EntityWrapper<WexinContent> wrapper=new EntityWrapper<WexinContent>();	
		//如果有查询条件，此处需要构造查询warpper
		//例如wrapper.eq();			
		List<WexinContent> WexinContentList=this_WexinContentService.selectPage(
				new Page<WexinContent>(page,pagesizes),
				wrapper.orderBy("id", false)//根据id倒序输出
				).getRecords();	
		for(WexinContent content : WexinContentList){
			content.setuName(this_SysUserService.selectById(content.getUid()).getName());
		}
		Map<String, Object> result = new HashMap<String, Object>();		
		int total=this_WexinContentService.selectList(wrapper).size();		
		result.put("total", total);
		result.put("data", WexinContentList);		
		return result;
	}

	/***
	 * 单页，如果是修改，显示内容及表单，如果是添加显示表单
	 * 
	 * @param 
	 * @return
	 */
	@RequestMapping(value = "/WexinContentView", method = RequestMethod.GET)
	public ModelAndView view(ModelAndView modelAndView, WexinContent this_WexinContent, @RequestParam(value = "id", required = false) Integer id) {	
		if (id != null) {
            modelAndView.addObject("WexinContent", this_WexinContentService.selectById(id));
        }else
        {        	
        	modelAndView.addObject("WexinContent",this_WexinContent);
        }
	     return modelAndView;
	}

	/***
	 * 保存，如果是新增，调用insert，如果是修改，调用updateById
	 * 
	 * @param 
	 * @return
	 */
	@RequestMapping(value = "/Save", method = RequestMethod.POST)
	@ResponseBody
	public Object Save(WexinContent this_WexinContent, HttpSession session,
			@RequestParam(value = "file", required = false) MultipartFile file) {
		Map<String, String> result = new HashMap<String, String>();
		
		if (StringUtil.isEmpty(this_WexinContent.getTitle())) {
			return renderError("标题不能为空");
		}
		if (StringUtil.isEmpty(this_WexinContent.getCont())) {
			return renderError("内容不能为空");
		}
		if (StringUtil.isEmpty(this_WexinContent.getDigest())) {
			return renderError("描述不能为空");
		}
		
		String firstDayOfMonth = getFirstDayOfMonth();
		String lastDayOfMonth = getLastDayOfMonth();
		List<WexinContent> wexinContents = this_WexinContentService
				.selectList(new EntityWrapper<WexinContent>()
				.between("uptime", firstDayOfMonth + Const.DateSearch.START_TIME, lastDayOfMonth + Const.DateSearch.END_TIME));
		if(wexinContents.size() > 4){
			return renderError("抱歉，微信群发消息每月只能群发四条信息！");
		}
		//文件上传
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String date = df.format(new Date());
        String year = date.substring(0, 4);
        String month = date.substring(5, 7);
        //文件路径 upload/article/当前年月/
        String path = request.getSession().getServletContext().getRealPath("upload") + "/goodsType/" + year + month + "/";
        //取扩展名
        if(file != null){
        	String extension = getExtensionName(file.getOriginalFilename());
	        
	        //拼接新的文件名
	        String fileName = getCurrTime()+buildRandom(5) + "." + extension;
	        
	        if (upload(path, fileName, file)) {
	        	this_WexinContent.setPic(path+fileName);
	        } else{
	        	return renderError("保存失败！");
	        }
        }
        if(file == null){
        	this_WexinContent.setPic(this_WexinContentService.selectById(this_WexinContent.getId()).getPic());
		}
		this_WexinContent.setUid(((SysUser)session.getAttribute(Const.lOGIN_SYSUSER)).getId());
		this_WexinContent.setUptime(new Date());
		if (this_WexinContent.getId() == null) {
			if(this_WexinContent.getStatus().equals("b")){
				return this_WexinContentService.insert(this_WexinContent) ? renderSuccess("保存成功")
						: renderError("保存失败");
			}
			if(sendNews(this_WexinContent, session)){
				this_WexinContentService.insert(this_WexinContent);
				return renderSuccess("推送成功");
			}
			return renderError("推送失败");
		} else {
			if(this_WexinContent.getStatus().equals("b")){
				return this_WexinContentService.updateById(this_WexinContent) ? renderSuccess("修改成功")
						: renderError("修改失败");
			}
			if(sendNews(this_WexinContent, session)){
				this_WexinContentService.updateById(this_WexinContent);
				return renderSuccess("推送成功");
			}
			return renderError("推送失败");
			
		}
	}

	/***
	 * 根据id删除
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping("/Delete")
	@ResponseBody
	public Object Delete(@RequestParam(value = "id", required = true) Integer id) {
		return this_WexinContentService.deleteById(id) ? renderSuccess("删除成功") : renderError("删除失败");
	}

	/***
	 * 根据ids批量删除，此方法根据前端需要
	 * 
	 * @param ids 逗号拼接项
	 * @return
	 */
	@RequestMapping("/BatchDelete")
	@ResponseBody
	public Object BatchDelete(@RequestParam(value = "ids", required = true) String ids) {
		List<Integer> idList=new ArrayList<Integer>();
		if(StringUtil.isNotEmpty(ids))
		{
			if (ids.contains("all,")) {
				ids=ids.replace("all,", "");//checkbox全选的时候带入，要去掉
			}			
			String[] lsStrings=ids.split(",");			
			for (String id : lsStrings) {
				idList.add(Integer.parseInt(id));
			}
			return this_WexinContentService.deleteBatchIds(idList) ? renderSuccess("删除成功") : renderError("删除失败");
		}else{
			return renderError("请选择需要删除的数据");
		}
		
	}
	
	private boolean sendNews(WexinContent this_WexinContent, HttpSession session){
		WxMpMassNews news = new WxMpMassNews();
		WxMpMassNews.WxMpMassNewsArticle article = new WxMpMassNews.WxMpMassNewsArticle();
		WeixinMessage weixinMessage = new WeixinMessage();
		weixinMessage.init();
		
		article.setTitle(this_WexinContent.getTitle());
		article.setContent(this_WexinContent.getCont());
		article.setThumbMediaId(weixinMessage.uploadArtImg(this_WexinContent.getPic()).getMediaId());
		article.setShowCoverPic(true);
		article.setAuthor(((SysUser)session.getAttribute(Const.lOGIN_SYSUSER)).getName());
		article.setContentSourceUrl("");
		article.setDigest(this_WexinContent.getDigest());
		news.addArticle(article);
		
		WxMpMassSendResult result;
		try {
			result = weixinMessage.sendNews(news);
			if(result.getErrorCode().equals("0")){
				return true;
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return false;
	}
	
	
	
}
